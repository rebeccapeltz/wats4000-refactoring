{"version":3,"sources":["webpack:///src/src/App.vue","app.3b84744a.css","webpack:///src/components/src/components/WeatherSummary.vue","webpack:///src/components/src/components/WeatherConditions.vue","webpack:///src/views/src/views/CitySearch.vue","webpack:///src/views/src/views/CurrentWeather.vue","webpack:///src/views/src/views/Forecast.vue"],"names":[],"mappings":"AAcA,KACA,6CAAA,CACA,kCAAA,CACA,iCAAA,CACA,aAAA,CACA,eAAA,CACA,YCZA,CDcA,KACA,eAAA,CACA,SAAA,CACA,QCZA,CDcA,KACA,SAAA,CACA,aAAA,CACA,SAAA,CACA,eCZA,CCSA,iCACA,oBAAA,CACA,WDcA,CEdA,oBACA,WAAA,CACA,kBFkBA,CEhBA,oBACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CACA,eAAA,CACA,UFkBA,CEhBA,oBACA,kBAAA,CACA,kBFkBA,CEhBA,0BACA,WFkBA,CG4BA,wDACA,SAAA,CACA,oBAAA,CACA,WHjBA,CGmBA,wCACA,eHjBA,CGoBA,oBACA,oBAAA,CACA,SHlBA,CGoBA,oBACA,oBAAA,CACA,WAAA,CACA,gBAAA,CACA,wBAAA,CACA,YAAA,CACA,UHlBA,CGoBA,iCACA,oBAAA,CACA,WHlBA,CGoBA,oBACA,WAAA,CACA,kBHlBA,CGoBA,oBACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CACA,eAAA,CACA,UHlBA,CGoBA,oBACA,kBAAA,CACA,kBHlBA,CGoBA,0BACA,WHlBA,CGqBA,mBACA,aHnBA,CIfA,4BACA,SAAA,CACA,oBAAA,CACA,WJmBA,CIjBA,wCAEA,eJmBA,CIhBA,oBACA,oBAAA,CACA,SJkBA,CIhBA,oBACA,oBAAA,CACA,WAAA,CACA,gBAAA,CACA,wBAAA,CACA,YJkBA,CIhBA,iCACA,oBAAA,CACA,WJkBA,CIhBA,oBACA,WAAA,CACA,kBJkBA,CIhBA,oBACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CACA,eAAA,CACA,UJkBA,CIhBA,oBACA,kBAAA,CACA,kBJkBA,CIhBA,0BACA,WJkBA,CIhBA,mBACA,aJkBA,CKvCA,4BACA,SAAA,CACA,oBAAA,CACA,WL2CA,CKzCA,wCAEA,eL2CA,CKxCA,oBACA,oBAAA,CACA,SL0CA,CKxCA,oBACA,oBAAA,CACA,WAAA,CACA,gBAAA,CACA,wBAAA,CACA,YAAA,CACA,UL0CA,CKvCA,mBACA,aLyCA,CKvCA,iCACA,oBAAA,CACA,WLyCA,CKvCA,oBACA,WAAA,CACA,kBLyCA,CKvCA,oBACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CACA,eAAA,CACA,ULyCA,CKvCA,oBACA,kBAAA,CACA,kBLyCA,CKvCA,0BACA,WLyCA","file":"app.3b84744a.css","sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Weather Service</h1>\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'app'\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin-top: 60px;\n  padding: 20px;\n}\nhtml {\n  background: #666;\n  padding: 0;\n  margin: 0;\n}\nbody {\n  width: 75%;\n  margin: 0 auto;\n  padding: 0;\n  background: #fff;\n}\n/* dl {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt::after {\n  content: \":\";\n} */\n</style>\n","\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin-top: 60px;\n  padding: 20px;\n}\nhtml {\n  background: #666;\n  padding: 0;\n  margin: 0;\n}\nbody {\n  width: 75%;\n  margin: 0 auto;\n  padding: 0;\n  background: #fff;\n}\n/* dl {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt::after {\n  content: \":\";\n} */\n\n\n.weatherSummary[data-v-5a6af4ec] {\n  display: inline-block;\n  width: 100px;\n}\n\n\ndl[data-v-e628125c] {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt[data-v-e628125c] {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd[data-v-e628125c] {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt[data-v-e628125c]::after {\n  content: \":\";\n}\n\n\n.errors li[data-v-40a5b0b3] {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\n\n\n.errors li[data-v-3d044f60] {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\nh1[data-v-3d044f60], h2[data-v-3d044f60] {\n  font-weight: normal;\n}\nul[data-v-3d044f60] {\n  list-style-type: none;\n  padding: 0;\n}\nli[data-v-3d044f60] {\n  display: inline-block;\n  width: 300px;\n  min-height: 300px;\n  border: solid 1px #e8e8e8;\n  padding: 10px;\n  margin: 5px;\n}\n.weatherSummary[data-v-3d044f60] {\n  display: inline-block;\n  width: 100px;\n}\ndl[data-v-3d044f60] {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt[data-v-3d044f60] {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd[data-v-3d044f60] {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt[data-v-3d044f60]::after {\n  content: \":\";\n}\na[data-v-3d044f60] {\n  color: #42b983;\n}\n\n\n.errors li[data-v-b9deb404] {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\nh1[data-v-b9deb404],\nh2[data-v-b9deb404] {\n  font-weight: normal;\n}\nul[data-v-b9deb404] {\n  list-style-type: none;\n  padding: 0;\n}\nli[data-v-b9deb404] {\n  display: inline-block;\n  width: 300px;\n  min-height: 300px;\n  border: solid 1px #e8e8e8;\n  padding: 10px;\n}\n.weatherSummary[data-v-b9deb404] {\n  display: inline-block;\n  width: 100px;\n}\ndl[data-v-b9deb404] {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt[data-v-b9deb404] {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd[data-v-b9deb404] {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt[data-v-b9deb404]::after {\n  content: \":\";\n}\na[data-v-b9deb404] {\n  color: #42b983;\n}\n\n\n.errors li[data-v-687dfccd] {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\nh1[data-v-687dfccd],\nh2[data-v-687dfccd] {\n  font-weight: normal;\n}\nul[data-v-687dfccd] {\n  list-style-type: none;\n  padding: 0;\n}\nli[data-v-687dfccd] {\n  display: inline-block;\n  width: 200px;\n  min-height: 300px;\n  border: solid 1px #e8e8e8;\n  padding: 10px;\n  margin: 5px;\n}\na[data-v-687dfccd] {\n  color: #42b983;\n}\n.weatherSummary[data-v-687dfccd] {\n  display: inline-block;\n  width: 100px;\n}\ndl[data-v-687dfccd] {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt[data-v-687dfccd] {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd[data-v-687dfccd] {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt[data-v-687dfccd]::after {\n  content: \":\";\n}\n\n\n/*# sourceMappingURL=app.3b84744a.css.map*/","<template>\n  <div>\n    <div v-for=\"weatherSummary in weatherData\" class=\"weatherSummary\" :key=\"weatherSummary.id\">\n      <img\n        v-bind:src=\"'http://openweathermap.org/img/w/' + weatherSummary.icon + '.png'\"\n        v-bind:alt=\"weatherSummary.main\"\n      >\n      <br>\n      <b>{{ weatherSummary.main }}</b>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'WeatherSummary',\n  data () {\n    return {\n\n    }\n  },\n  props: {\n    weatherData: {}\n  }\n}\n</script>\n\n<style scoped>\n.weatherSummary {\n  display: inline-block;\n  width: 100px;\n}\n</style>","<template>\n  <div>\n    <dl>\n      <dt v-if=\"conditions.temp != conditions.temp_min\">Current Temperature</dt>\n      <dd v-if=\"conditions.temp != conditions.temp_min\">{{ conditions.temp }}%</dd>\n      <dt>Humidity</dt>\n      <dd>{{ conditions.humidity }}%</dd>\n      <dt>High</dt>\n      <dd>{{ conditions.temp_max }}&deg;F</dd>\n      <dt>Low</dt>\n      <dd>{{ conditions.temp_min }}&deg;F</dd>\n    </dl>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'WeatherConditions',\n  data () {\n    return {\n\n    }\n  },\n  props: {\n    conditions: {}\n  }\n}\n</script>\n\n<style scoped>\n  dl {\n    padding: 5px;\n    background: #e8e8e8;\n  }\n  dt {\n    float: left;\n    clear: left;\n    width: 120px;\n    text-align: right;\n    font-weight: bold;\n    color: blue;\n  }\n  dd {\n    margin: 0 0 0 130px;\n    padding: 0 0 0.5em 0;\n  }\n  dt::after {\n    content: \":\";\n  }\n</style>","<template>\n  <div>\n    <h2>City Search</h2>\n    <form v-on:submit.prevent=\"getCities\">\n        <p>Enter city name: <input type=\"text\" v-model=\"query\" placeholder=\"Paris\"> <button type=\"submit\">Go</button></p>\n    </form>\n    <ul class=\"cities\" v-if=\"results && results.list.length > 0\">\n        <li v-for=\"(city,index) in results.list\" :key=\"index\">\n            <h2>{{ city.name }}, {{ city.sys.country }}</h2>\n            <p><router-link v-bind:to=\"{ name: 'CurrentWeather', params: { cityId: city.id } }\">View Current Weather</router-link></p>\n\n            <!-- TODO: Make weather summary be in a child component. -->\n             <weather-summary v-bind:weatherData=\"city.weather\"></weather-summary>\n\n            <!-- <div v-for=\"(weatherSummary,index) in city.weather\" class=\"weatherSummary\" :key=\"index\">\n                <img v-bind:src=\"'http://openweathermap.org/img/w/' + weatherSummary.icon + '.png'\" v-bind:alt=\"weatherSummary.main\">\n                <br>\n                <b>{{ weatherSummary.main }}</b>\n            </div> -->\n            <!-- TODO: Make dl of weather data be in a child component. -->\n             <weather-conditions v-bind:conditions=\"city.main\"></weather-conditions>\n\n            <!-- <dl>\n                <dt>Current Temp</dt>\n                <dd>{{ city.main.temp }}&deg;F</dd>\n                <dt>Humidity</dt>\n                <dd>{{ city.main.humidity }}%</dd>\n                <dt>High</dt>\n                <dd>{{ city.main.temp_max }}&deg;F</dd>\n                <dt>Low</dt>\n                <dd>{{ city.main.temp_min }}&deg;F</dd>\n            </dl> -->\n        </li>\n    </ul>\n    <error-list v-bind:errorList=\"errors\"></error-list>\n    <!-- <div v-else-if=\"errors.length > 0\">\n      <h2>There was an error fetching weather data.</h2>\n      <ul class=\"errors\">\n        <li v-for=\"(error,index) in errors\" :key=\"index\">{{ error }}</li>\n      </ul>\n    </div> -->\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport {API} from '@/common/api';\nimport WeatherSummary from '@/components/WeatherSummary'\nimport WeatherConditions from '@/components/WeatherConditions'\nimport ErrorList from '@/components/ErrorList'\n\nexport default {\n  name: 'CitySearch',\n  data () {\n    return {\n      results: null,\n      errors: [],\n      query: ''\n    }\n  },\n  methods: {\n    getCities: function () {\n      // TODO: Improve base config for API\n      API.get('find', {\n        params: {\n            q: this.query\n        }\n      })\n      // axios.get('//api.openweathermap.org/data/2.5/find', {\n      //   params: {\n      //       q: this.query,\n      //       units: 'imperial',\n      //       APPID: 'e2974148d9fbd649739ac00943298672'\n      //   }\n      // })\n      .then(response => {\n        this.results = response.data\n      })\n      .catch(error => {\n        this.errors.push(error)\n      });\n    }\n  },\n  components: {\n    'weather-summary': WeatherSummary,\n    'weather-conditions': WeatherConditions,\n    'error-list': ErrorList\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.errors li {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\nh1, h2 {\n  font-weight: normal;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  width: 300px;\n  min-height: 300px;\n  border: solid 1px #e8e8e8;\n  padding: 10px;\n  margin: 5px;\n}\n.weatherSummary {\n  display: inline-block;\n  width: 100px;\n}\ndl {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt::after {\n  content: \":\";\n}\n\na {\n  color: #42b983;\n}\n</style>\n\n\n","<template>\n  <div>\n    <h2>\n      Current Weather\n      <span\n        v-if=\"weatherData\"\n      >for {{ weatherData.name }}, {{weatherData.sys.country }}</span>\n    </h2>\n    <p>\n      <router-link to=\"/\">Home</router-link>\n      <router-link\n        v-bind:to=\"{ name: 'Forecast', params: { cityId: $route.params.cityId } }\"\n      >View 5-Day Forecast</router-link>\n    </p>\n    <div v-if=\"weatherData && errors.length===0\">\n      <!-- TODO: Make weather summary be in a child component. -->\n      <weather-summary v-bind:weatherData=\"weatherData.weather\"></weather-summary>\n      <!-- <div\n        v-for=\"(weatherSummary,index) in weatherData.weather\"\n        :key=\"index\"\n        class=\"weatherSummary\"\n      >\n        <img\n          v-bind:src=\"'http://openweathermap.org/img/w/' + weatherSummary.icon + '.png'\"\n          v-bind:alt=\"weatherSummary.main\"\n        >\n        <br>\n        <b>{{ weatherSummary.main }}</b>\n      </div>-->\n      <!-- TODO: Make dl of weather data be in a child component. -->\n      <weather-conditions v-bind:conditions=\"weatherData.main\"></weather-conditions>\n\n      <!-- <dl>\n        <dt>Current Temp</dt>\n        <dd>{{ weatherData.main.temp }}&deg;F</dd>\n        <dt>Humidity</dt>\n        <dd>{{ weatherData.main.humidity }}%</dd>\n        <dt>High</dt>\n        <dd>{{ weatherData.main.temp_max }}&deg;F</dd>\n        <dt>Low</dt>\n        <dd>{{ weatherData.main.temp_min }}&deg;F</dd>\n      </dl>-->\n    </div>\n    <error-list v-bind:errorList=\"errors\"></error-list>\n\n    <!-- <div v-else-if=\"errors.length > 0\">\n      <h2>There was an error fetching weather data.</h2>\n      <ul class=\"errors\">\n        <li v-for=\"(error,index) in errors\" :key=\"index\">{{ error }}</li>\n      </ul>\n    </div>-->\n    <!-- <div v-else>\n      <h2>Loading...</h2>\n    </div>-->\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { API } from '@/common/api';\nimport WeatherSummary from '@/components/WeatherSummary'\nimport WeatherConditions from '@/components/WeatherConditions'\nimport ErrorList from '@/components/ErrorList'\n\nexport default {\n  name: 'CurrentWeather',\n  data () {\n    return {\n      weatherData: null,\n      errors: [],\n      query: ''\n    }\n  },\n  created () {\n    // TODO: Improve base config for API\n    // axios.get('//api.openweathermap.org/data/2.5/weather', {\n    //   params: {\n    //       id: this.$route.params.cityId,\n    //       units: 'imperial',\n    //       APPID: 'e2974148d9fbd649739ac00943298672'\n    //   }\n    // })\n    // TODO: Improve base config for API\n    API.get('weather', {\n      params: {\n        id: this.$route.params.cityId,\n      }\n    })\n      .then(response => {\n        this.weatherData = response.data\n      })\n      .catch(error => {\n        this.errors.push(error)\n      });\n  },\n  components: {\n    'weather-summary': WeatherSummary,\n    'weather-conditions': WeatherConditions,\n    'error-list': ErrorList\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.errors li {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  width: 300px;\n  min-height: 300px;\n  border: solid 1px #e8e8e8;\n  padding: 10px;\n}\n.weatherSummary {\n  display: inline-block;\n  width: 100px;\n}\ndl {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt::after {\n  content: \":\";\n}\na {\n  color: #42b983;\n}\n</style>\n\n\n","<template>\n  <div>\n    <h2>\n      Five Day Hourly Forecast\n      <span\n        v-if=\"weatherData\"\n      >for {{ weatherData.city.name }}, {{weatherData.city.country }}</span>\n    </h2>\n    <p>\n      <router-link to=\"/\">Home</router-link>\n      <router-link v-bind:to=\"{ name: 'CurrentWeather', params: { cityId: $route.params.cityId } }\">\n        Current Weather\n        <span\n          v-if=\"weatherData\"\n        >for {{ weatherData.city.name }}, {{weatherData.city.country }}</span>\n      </router-link>\n    </p>\n\n    <ul v-if=\"weatherData && errors.length===0\" class=\"forecast\">\n      <li v-for=\"(forecast,index) in weatherData.list\" :key=\"index\">\n        <h3>{{ forecast.dt|formatDate }}</h3>\n        <!-- TODO: Make weather summary be in a child component. -->\n        <weather-summary v-bind:weatherData=\"forecast.weather\"></weather-summary>\n        <!-- <div v-for=\"(weatherSummary,index) in forecast.weather\" :key=\"index\" class=\"weatherSummary\">\n          <img\n            v-bind:src=\"'http://openweathermap.org/img/w/' + weatherSummary.icon + '.png'\"\n            v-bind:alt=\"weatherSummary.main\"\n          >\n          <br>\n          <b>{{ weatherSummary.main }}</b>\n        </div>-->\n        <!-- TODO: Make dl of weather data be in a child component. -->\n        <weather-conditions v-bind:conditions=\"forecast.main\"></weather-conditions>\n\n        <!-- <dl>\n          <dt>Humidity</dt>\n          <dd>{{ forecast.main.humidity }}%</dd>\n          <dt>High</dt>\n          <dd>{{ forecast.main.temp_max }}&deg;F</dd>\n          <dt>Low</dt>\n          <dd>{{ forecast.main.temp_min }}&deg;F</dd>\n        </dl>-->\n      </li>\n    </ul>\n    <error-list v-bind:errorList=\"errors\"></error-list>\n\n    <!-- <div v-else-if=\"errors.length > 0\">\n      <h2>There was an error fetching weather data.</h2>\n      <ul class=\"errors\">\n        <li v-for=\"(error,index) in errors\" :key=\"index\">{{ error }}</li>\n      </ul>\n    </div>\n    <div v-else>\n      <h2>Loading...</h2>\n    </div>-->\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { API } from '@/common/api';\nimport WeatherSummary from '@/components/WeatherSummary'\nimport WeatherConditions from '@/components/WeatherConditions'\nimport ErrorList from '@/components/ErrorList'\n\n\nexport default {\n  name: 'Forecast',\n  data () {\n    return {\n      weatherData: null,\n      errors: [],\n      query: ''\n    }\n  },\n  created () {\n    // TODO: Improve base config for API\n    // axios.get('//api.openweathermap.org/data/2.5/forecast', {\n    //   params: {\n    //       id: this.$route.params.cityId,\n    //       units: 'imperial',\n    //       APPID: 'e2974148d9fbd649739ac00943298672'\n    //   }\n    // })\n    API.get('forecast', {\n      params: {\n        id: this.$route.params.cityId,\n      }\n    })\n      .then(response => {\n        this.weatherData = response.data\n      })\n      .catch(error => {\n        this.errors.push(error)\n      });\n  },\n  filters: {\n    formatDate: function (timestamp) {\n      let date = new Date(timestamp * 1000);\n      const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n      const weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n      //let weekday = date.getDay();\n      let daynum = date.getDate();\n      let month = date.getMonth();\n\n      let hour = date.getHours();\n      if (hour === 12) {\n        hour = 'Noon';\n      } else if (hour === 0) {\n        hour = 'Midnight';\n      } else if (hour > 12) {\n        hour = hour - 12 + 'PM';\n      } else if (hour < 12) {\n        hour = hour + 'AM';\n      }\n      //let year = date.getFullYear();\n      return `${months[month]} ${daynum} @ ${hour}`;\n    }\n  },\n  components: {\n    'weather-summary': WeatherSummary,\n    'weather-conditions': WeatherConditions,\n    'error-list': ErrorList\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.errors li {\n  color: red;\n  border: solid red 1px;\n  padding: 5px;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  width: 200px;\n  min-height: 300px;\n  border: solid 1px #e8e8e8;\n  padding: 10px;\n  margin: 5px;\n}\n\na {\n  color: #42b983;\n}\n.weatherSummary {\n  display: inline-block;\n  width: 100px;\n}\ndl {\n  padding: 5px;\n  background: #e8e8e8;\n}\ndt {\n  float: left;\n  clear: left;\n  width: 120px;\n  text-align: right;\n  font-weight: bold;\n  color: blue;\n}\ndd {\n  margin: 0 0 0 130px;\n  padding: 0 0 0.5em 0;\n}\ndt::after {\n  content: \":\";\n}\n</style>\n\n\n"]}